{"engineConfig":{"defaultFlushInterval":"500","datasourceConfigurations":[{"kind":"GRAPHQL","rootNodes":[{"typeName":"Query","fieldNames":["ping"]},{"typeName":"Subgraph","fieldNames":["id"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:9000/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:9000/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"type Query {\n\tping: String!\n}\n\ntype Subgraph @key(fields: \"id\") @shareable {\n\tid: ID!\n}\n\n\"\"\"\nDirects the executor to include this field or fragment only when the `if` argument is true.\n\"\"\"\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\"\"\"\nDirects the executor to skip this field or fragment when the `if` argument is true.\n\"\"\"\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\nextend schema @link(\n\turl: \"https://specs.apollo.dev/federation/v2.5\",\n\timport: [\"@key\", \"@tag\", \"@shareable\", \"@inaccessible\", \"@override\", \"@external\", \"@provides\", \"@requires\", \"@composeDirective\", \"@interfaceObject\", \"@requiresScopes\"]\n)\n\n"},"upstreamSchema":{"key":"3790b7c7bc56fffe42b837ec237373438ac6109b"}},"requestTimeoutSeconds":"10","id":"0","keys":[{"typeName":"Subgraph","selectionSet":"id"}]},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Mutation","fieldNames":["subgraph1IncrementValue"]},{"typeName":"Query","fieldNames":["subgraph1QueryValue"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:9001/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:9001/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"type Mutation {\n\tsubgraph1IncrementValue(by: Int): Int!\n}\n\ntype Query {\n\tsubgraph1QueryValue: Int!\n}\n\n\"\"\"\nDirects the executor to include this field or fragment only when the `if` argument is true.\n\"\"\"\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\"\"\"\nDirects the executor to skip this field or fragment when the `if` argument is true.\n\"\"\"\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\nextend schema @link(\n\turl: \"https://specs.apollo.dev/federation/v2.5\",\n\timport: [\"@key\", \"@tag\", \"@shareable\", \"@inaccessible\", \"@override\", \"@external\", \"@provides\", \"@requires\", \"@composeDirective\", \"@interfaceObject\", \"@requiresScopes\"]\n)\n\n"},"upstreamSchema":{"key":"8ca4c95920661cfa36acc6f441f4e27e95da7fa9"}},"requestTimeoutSeconds":"10","id":"1"},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Mutation","fieldNames":["subgraph2IncrementValue"]},{"typeName":"Query","fieldNames":["subgraph2QueryValue"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:9002/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:9002/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"type Mutation {\n\tsubgraph2IncrementValue(by: Int): Int!\n}\n\ntype Query {\n\tsubgraph2QueryValue: Int!\n}\n\n\"\"\"\nDirects the executor to include this field or fragment only when the `if` argument is true.\n\"\"\"\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\"\"\"\nDirects the executor to skip this field or fragment when the `if` argument is true.\n\"\"\"\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\nextend schema @link(\n\turl: \"https://specs.apollo.dev/federation/v2.5\",\n\timport: [\"@key\", \"@tag\", \"@shareable\", \"@inaccessible\", \"@override\", \"@external\", \"@provides\", \"@requires\", \"@composeDirective\", \"@interfaceObject\", \"@requiresScopes\"]\n)\n\n"},"upstreamSchema":{"key":"441ece4a666ccba4f7986b9c7a5610ca6c55e682"}},"requestTimeoutSeconds":"10","id":"2"},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Mutation","fieldNames":["subgraph3IncrementValue"]},{"typeName":"Query","fieldNames":["subgraph3QueryValue"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:9003/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:9003/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"type Mutation {\n\tsubgraph3IncrementValue(by: Int): Int!\n}\n\ntype Query {\n\tsubgraph3QueryValue: Int!\n}\n\n\"\"\"\nDirects the executor to include this field or fragment only when the `if` argument is true.\n\"\"\"\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\"\"\"\nDirects the executor to skip this field or fragment when the `if` argument is true.\n\"\"\"\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\nextend schema @link(\n\turl: \"https://specs.apollo.dev/federation/v2.5\",\n\timport: [\"@key\", \"@tag\", \"@shareable\", \"@inaccessible\", \"@override\", \"@external\", \"@provides\", \"@requires\", \"@composeDirective\", \"@interfaceObject\", \"@requiresScopes\"]\n)\n\n"},"upstreamSchema":{"key":"012cd777041274d0c38fbcbd3d64ae78f720404d"}},"requestTimeoutSeconds":"10","id":"3"},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Mutation","fieldNames":["subgraph4IncrementValue"]},{"typeName":"Query","fieldNames":["subgraph4QueryValue"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:9004/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:9004/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"type Mutation {\n\tsubgraph4IncrementValue(by: Int): Int!\n}\n\ntype Query {\n\tsubgraph4QueryValue: Int!\n}\n\n\"\"\"\nDirects the executor to include this field or fragment only when the `if` argument is true.\n\"\"\"\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\"\"\"\nDirects the executor to skip this field or fragment when the `if` argument is true.\n\"\"\"\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\nextend schema @link(\n\turl: \"https://specs.apollo.dev/federation/v2.5\",\n\timport: [\"@key\", \"@tag\", \"@shareable\", \"@inaccessible\", \"@override\", \"@external\", \"@provides\", \"@requires\", \"@composeDirective\", \"@interfaceObject\", \"@requiresScopes\"]\n)\n\n"},"upstreamSchema":{"key":"e3a5f9b1f1391d3df02c9ce58803a221c2b58e48"}},"requestTimeoutSeconds":"10","id":"4"},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Mutation","fieldNames":["subgraph5IncrementValue"]},{"typeName":"Query","fieldNames":["subgraph5QueryValue"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:9005/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:9005/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"type Mutation {\n\tsubgraph5IncrementValue(by: Int): Int!\n}\n\ntype Query {\n\tsubgraph5QueryValue: Int!\n}\n\n\"\"\"\nDirects the executor to include this field or fragment only when the `if` argument is true.\n\"\"\"\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\"\"\"\nDirects the executor to skip this field or fragment when the `if` argument is true.\n\"\"\"\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\nextend schema @link(\n\turl: \"https://specs.apollo.dev/federation/v2.5\",\n\timport: [\"@key\", \"@tag\", \"@shareable\", \"@inaccessible\", \"@override\", \"@external\", \"@provides\", \"@requires\", \"@composeDirective\", \"@interfaceObject\", \"@requiresScopes\"]\n)\n\n"},"upstreamSchema":{"key":"dbc5f4ce34727c8550d8ebf3dd837242947a9718"}},"requestTimeoutSeconds":"10","id":"5"},{"kind":"PUBSUB","rootNodes":[{"typeName":"Subscription","fieldNames":["subgraphValueUpdated"]}],"childNodes":[{"typeName":"Subgraph","fieldNames":["id"],"externalFieldNames":["id"]}],"overrideFieldPathFromAlias":true,"requestTimeoutSeconds":"10","id":"6","keys":[{"typeName":"Subgraph","selectionSet":"id","disableEntityResolver":true}],"customEvents":{"nats":[{"engineEventConfiguration":{"providerId":"default","type":"SUBSCRIBE","typeName":"Subscription","fieldName":"subgraphValueUpdated"},"subjects":["gema.subgraph{{ args.id }}.value.updated"],"streamConfiguration":{"consumerName":"edg_subgraphs","streamName":"demoStream","consumerInactiveThreshold":30}}]}}],"fieldConfigurations":[{"typeName":"Mutation","fieldName":"subgraph1IncrementValue","argumentsConfiguration":[{"name":"by","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Mutation","fieldName":"subgraph2IncrementValue","argumentsConfiguration":[{"name":"by","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Mutation","fieldName":"subgraph3IncrementValue","argumentsConfiguration":[{"name":"by","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Mutation","fieldName":"subgraph4IncrementValue","argumentsConfiguration":[{"name":"by","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Mutation","fieldName":"subgraph5IncrementValue","argumentsConfiguration":[{"name":"by","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Subscription","fieldName":"subgraphValueUpdated","argumentsConfiguration":[{"name":"id","sourceType":"FIELD_ARGUMENT"}]}],"graphqlSchema":"schema {\n  query: Query\n  mutation: Mutation\n  subscription: Subscription\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nscalar openfed__Scope\n\ntype Query {\n  ping: String!\n  subgraph1QueryValue: Int!\n  subgraph2QueryValue: Int!\n  subgraph3QueryValue: Int!\n  subgraph4QueryValue: Int!\n  subgraph5QueryValue: Int!\n}\n\ntype Subgraph {\n  id: ID!\n}\n\ntype Mutation {\n  subgraph1IncrementValue(by: Int): Int!\n  subgraph2IncrementValue(by: Int): Int!\n  subgraph3IncrementValue(by: Int): Int!\n  subgraph4IncrementValue(by: Int): Int!\n  subgraph5IncrementValue(by: Int): Int!\n}\n\ntype Subscription {\n  subgraphValueUpdated(id: ID!): Subgraph!\n}","stringStorage":{"3790b7c7bc56fffe42b837ec237373438ac6109b":"schema {\n  query: Query\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable repeatable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Query {\n  ping: String!\n}\n\ntype Subgraph @key(fields: \"id\") {\n  id: ID! @shareable\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope","8ca4c95920661cfa36acc6f441f4e27e95da7fa9":"schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable repeatable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Mutation {\n  subgraph1IncrementValue(by: Int): Int!\n}\n\ntype Query {\n  subgraph1QueryValue: Int!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope","441ece4a666ccba4f7986b9c7a5610ca6c55e682":"schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable repeatable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Mutation {\n  subgraph2IncrementValue(by: Int): Int!\n}\n\ntype Query {\n  subgraph2QueryValue: Int!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope","012cd777041274d0c38fbcbd3d64ae78f720404d":"schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable repeatable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Mutation {\n  subgraph3IncrementValue(by: Int): Int!\n}\n\ntype Query {\n  subgraph3QueryValue: Int!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope","e3a5f9b1f1391d3df02c9ce58803a221c2b58e48":"schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable repeatable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Mutation {\n  subgraph4IncrementValue(by: Int): Int!\n}\n\ntype Query {\n  subgraph4QueryValue: Int!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope","dbc5f4ce34727c8550d8ebf3dd837242947a9718":"schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable repeatable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Mutation {\n  subgraph5IncrementValue(by: Int): Int!\n}\n\ntype Query {\n  subgraph5QueryValue: Int!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope","412a0bb4864134b6c96755a1110b9ef81d63b3bb":"schema {\n  subscription: Subscription\n}\n\ndirective @edfs__natsSubscribe(providerId: String! = \"default\", streamConfiguration: edfs__NatsStreamConfiguration, subjects: [String!]!) on FIELD_DEFINITION\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Subgraph @key(fields: \"id\", resolvable: false) {\n  id: ID! @external\n}\n\ntype Subscription {\n  subgraphValueUpdated(id: ID!): Subgraph! @edfs__natsSubscribe(subjects: [\"gema.subgraph{{ args.id }}.value.updated\"], streamConfiguration: {streamName: \"demoStream\", consumerName: \"edg_subgraphs\", consumerInactiveThreshold: 30})\n}\n\ninput edfs__NatsStreamConfiguration {\n  consumerInactiveThreshold: Int! = 30\n  consumerName: String!\n  streamName: String!\n}\n\nscalar openfed__FieldSet"}},"version":"4f80473e-3461-4625-88b0-9a818535f69c","subgraphs":[{"id":"0","name":"subgraph-manager","routingUrl":"http://127.0.0.1:9000/graphql"},{"id":"1","name":"subgraph-1","routingUrl":"http://127.0.0.1:9001/graphql"},{"id":"2","name":"subgraph-2","routingUrl":"http://127.0.0.1:9002/graphql"},{"id":"3","name":"subgraph-3","routingUrl":"http://127.0.0.1:9003/graphql"},{"id":"4","name":"subgraph-4","routingUrl":"http://127.0.0.1:9004/graphql"},{"id":"5","name":"subgraph-5","routingUrl":"http://127.0.0.1:9005/graphql"},{"id":"6","name":"edg"}],"compatibilityVersion":"1:0.43.3"}